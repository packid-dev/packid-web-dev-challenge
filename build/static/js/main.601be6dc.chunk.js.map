{"version":3,"sources":["pages/Unique/index.js","App.js","index.js"],"names":["Unique","getRecentTemperature","option","recentTemperature","changingValue","sensor","measurements","forEach","element","date_hour","temperature","temperature_max","temperature_min","className","label","value","length","toFixed","getAVG","type","data","infoArray","push","getInfoToGraph","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"k3hBAOe,SAASA,IASpB,SAASC,EAAqBC,GAC1B,IAAIC,EACAC,EAAgBC,EAAOC,aAAa,GAApB,UAQpB,OAPAD,EAAOC,aAAaC,SAAQ,SAAAC,GACrBJ,GAAiBI,EAAQC,YACxBL,EAAgBI,EAAQC,UACxBN,EAAoBK,EAAQE,gBAIvB,GAAVR,EACQC,EACQ,GAAVD,EACFC,EAAoBE,EAAOM,iBAAmBR,EAAoBE,EAAOO,gBAEpE,+DAIA,0EAPN,EAqBV,OACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,eACX,8CACA,2BAAIR,EAAOS,QAGf,yBAAKD,UAAU,gBACX,oDACA,uBAAGA,UAAU,OAAb,QAAyBR,EAAOO,iBAChC,uBAAGC,UAAU,OAAb,QAAyBR,EAAOM,kBAGpC,yBAAKE,UAAU,uBACX,yBAAKA,UAAU,4BACX,uDACA,2BA1DpB,WACI,IAAIE,EAAQ,EAIZ,OAHAV,EAAOC,aAAaC,SAAQ,SAAAC,GACxBO,GAASP,EAAQE,gBAEbK,EAAQV,EAAOC,aAAaU,QAAQC,QAAQ,GAqDhCC,KAGR,yBAAKL,UAAU,0CACX,wDACA,2BAAIZ,EAAqB,KAG7B,yBAAKY,UAAU,8BACX,oEACA,2BAAIZ,EAAqB,KAG7B,yBAAKY,UAAU,8BACX,gEACA,kBAAC,IAAD,CACIM,KAAK,SACLC,KA1CxB,WACI,IAAIC,EAAY,GAIhB,OAHAhB,EAAOC,aAAaC,SAAQ,SAAAC,GACxBa,EAAUC,KAAKd,EAAQE,gBAEpBW,EAqCmBE,SCxEnBC,MANf,WACE,OACE,kBAACxB,EAAD,OCHJyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.601be6dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport AnyChart from 'anychart-react';\r\n\r\nimport sensor from './sensor.json';\r\n\r\nimport './styles.scss';\r\n\r\nexport default function Unique(){\r\n    function getAVG(){\r\n        var value = 0;\r\n        sensor.measurements.forEach(element => {\r\n            value += element.temperature;\r\n        });\r\n        return (value / sensor.measurements.length).toFixed(4);\r\n    }\r\n\r\n    function getRecentTemperature(option){\r\n        var recentTemperature;\r\n        var changingValue = sensor.measurements[0]['date_hour'];\r\n        sensor.measurements.forEach(element => {\r\n            if(changingValue <= element.date_hour){\r\n                changingValue = element.date_hour;\r\n                recentTemperature = element.temperature;\r\n            }\r\n        });\r\n\r\n        if(option == 1){\r\n            return recentTemperature;\r\n        }else if(option == 2){\r\n            if(recentTemperature < sensor.temperature_max && recentTemperature > sensor.temperature_min){\r\n                return (\r\n                    <span>Temperatura está na faixa.</span>\r\n                );\r\n            }else{\r\n                return (\r\n                    <span>Temperatura não está na faixa</span>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    function getInfoToGraph(){\r\n        var infoArray = [];\r\n        sensor.measurements.forEach(element => {\r\n            infoArray.push(element.temperature);\r\n        });\r\n        return infoArray;\r\n    }\r\n\r\n    return(\r\n        <div className=\"sensor-container\">\r\n            <div className=\"sensor-content\">\r\n                <div className=\"sensor-name\">\r\n                    <h2>Nome do sensor</h2>\r\n                    <p>{sensor.label}</p>\r\n                </div>\r\n\r\n                <div className=\"sensor-range\">\r\n                    <h2>Faixa de temperatura</h2>\r\n                    <p className=\"min\">MIN: {sensor.temperature_min}</p>\r\n                    <p className=\"max\">MAX: {sensor.temperature_max}</p>\r\n                </div>\r\n\r\n                <div className=\"sensor-measurements\">\r\n                    <div className=\"sensor-measurements__avg\">\r\n                        <h2>Média de temperatura</h2>\r\n                        <p>{getAVG()}</p>\r\n                    </div>\r\n\r\n                    <div className=\"sensor-measurements__recentTemperature\">\r\n                        <h2>Temperatura mais recente</h2>\r\n                        <p>{getRecentTemperature(1)}</p>\r\n                    </div>\r\n\r\n                    <div className=\"sensor-measurements__range\">\r\n                        <h2>Temperatura está dentro da faixa?</h2>\r\n                        <p>{getRecentTemperature(2)}</p>\r\n                    </div>\r\n\r\n                    <div className=\"sensor-measurements__graph\">\r\n                        <h2>Gráfico das leituras passadas</h2>\r\n                        <AnyChart\r\n                            type=\"column\"\r\n                            data={getInfoToGraph()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\n\nimport Unique from './pages/Unique';\n\nfunction App() {\n  return (\n    <Unique></Unique>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}